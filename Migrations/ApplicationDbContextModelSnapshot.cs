// <auto-generated />
using System;
using System.Collections.Generic;
using BlazorApp1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Microsoft.SqlServer.Types;

#nullable disable

namespace BlazorApp1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorApp1.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublishDates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("BlazorApp1.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredCategories")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("RatingHistory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("VisitDates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Contact", "BlazorApp1.Models.Customer.Contact#Contact", b1 =>
                        {
                            b1.IsRequired();

                            b1.ComplexProperty<Dictionary<string, object>>("Address", "BlazorApp1.Models.Customer.Contact#Contact.Address#Address", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("City")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Country")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Line1")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Line2")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("PostCode")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("HomePhone", "BlazorApp1.Models.Customer.Contact#Contact.HomePhone#PhoneNumber", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<int>("CountryCode")
                                        .HasColumnType("int");

                                    b2.Property<long>("Number")
                                        .HasColumnType("bigint");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("MobilePhone", "BlazorApp1.Models.Customer.Contact#Contact.MobilePhone#PhoneNumber", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<int>("CountryCode")
                                        .HasColumnType("int");

                                    b2.Property<long>("Number")
                                        .HasColumnType("bigint");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("WorkPhone", "BlazorApp1.Models.Customer.Contact#Contact.WorkPhone#PhoneNumber", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<int>("CountryCode")
                                        .HasColumnType("int");

                                    b2.Property<long>("Number")
                                        .HasColumnType("bigint");
                                });
                        });

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BlazorApp1.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<SqlHierarchyId>("PathFromCEO")
                        .HasColumnType("hierarchyid");

                    b.Property<string>("PerformanceReviewDates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<TimeOnly>("WorkEndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("WorkStartTime")
                        .HasColumnType("time");

                    b.ComplexProperty<Dictionary<string, object>>("Contact", "BlazorApp1.Models.Employee.Contact#Contact", b1 =>
                        {
                            b1.IsRequired();

                            b1.ComplexProperty<Dictionary<string, object>>("Address", "BlazorApp1.Models.Employee.Contact#Contact.Address#Address", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("City")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Country")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Line1")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Line2")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("PostCode")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("HomePhone", "BlazorApp1.Models.Employee.Contact#Contact.HomePhone#PhoneNumber", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<int>("CountryCode")
                                        .HasColumnType("int");

                                    b2.Property<long>("Number")
                                        .HasColumnType("bigint");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("MobilePhone", "BlazorApp1.Models.Employee.Contact#Contact.MobilePhone#PhoneNumber", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<int>("CountryCode")
                                        .HasColumnType("int");

                                    b2.Property<long>("Number")
                                        .HasColumnType("bigint");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("WorkPhone", "BlazorApp1.Models.Employee.Contact#Contact.WorkPhone#PhoneNumber", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<int>("CountryCode")
                                        .HasColumnType("int");

                                    b2.Property<long>("Number")
                                        .HasColumnType("bigint");
                                });
                        });

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BlazorApp1.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("PreferredDeliveryTime")
                        .HasColumnType("time");

                    b.ComplexProperty<Dictionary<string, object>>("BillingAddress", "BlazorApp1.Models.Order.BillingAddress#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("ContactPhone", "BlazorApp1.Models.Order.ContactPhone#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("CountryCode")
                                .HasColumnType("int");

                            b1.Property<long>("Number")
                                .HasColumnType("bigint");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("ShippingAddress", "BlazorApp1.Models.Order.ShippingAddress#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");
                        });

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BlazorApp1.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("PublishedOn")
                        .HasColumnType("date");

                    b.Property<string>("SearchTerms")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("BlazorApp1.Models.Blog", b =>
                {
                    b.OwnsOne("BlazorApp1.Models.BlogMetadata", "Metadata", b1 =>
                        {
                            b1.Property<int>("BlogId")
                                .HasColumnType("int");

                            b1.Property<string>("Author")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Categories")
                                .IsRequired()
                                .HasMaxLength(4000)
                                .IsUnicode(true)
                                .HasColumnType("nvarchar(4000)");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<bool>("IsPublic")
                                .HasColumnType("bit");

                            b1.Property<string>("Language")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Theme")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BlogId");

                            b1.ToTable("Blogs");

                            b1.ToJson("Metadata");

                            b1.WithOwner()
                                .HasForeignKey("BlogId");
                        });

                    b.Navigation("Metadata")
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.Models.Order", b =>
                {
                    b.HasOne("BlazorApp1.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BlazorApp1.Models.Post", b =>
                {
                    b.HasOne("BlazorApp1.Models.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("BlazorApp1.Models.PostMetadata", "Metadata", b1 =>
                        {
                            b1.Property<int>("PostId")
                                .HasColumnType("int");

                            b1.Property<string>("CustomField1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CustomField2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("CustomNumber")
                                .HasColumnType("int");

                            b1.HasKey("PostId");

                            b1.ToTable("Posts");

                            b1.ToJson("Metadata");

                            b1.WithOwner()
                                .HasForeignKey("PostId");

                            b1.OwnsMany("BlazorApp1.Models.PostUpdate", "Updates", b2 =>
                                {
                                    b2.Property<int>("PostMetadataPostId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    b2.Property<string>("Description")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("UpdatedBy")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<DateOnly>("UpdatedOn")
                                        .HasColumnType("date");

                                    b2.HasKey("PostMetadataPostId", "Id");

                                    b2.ToTable("Posts");

                                    b2.WithOwner()
                                        .HasForeignKey("PostMetadataPostId");
                                });

                            b1.OwnsMany("BlazorApp1.Models.SearchInfo", "TopSearches", b2 =>
                                {
                                    b2.Property<int>("PostMetadataPostId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    b2.Property<int>("Count")
                                        .HasColumnType("int");

                                    b2.Property<string>("Term")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("PostMetadataPostId", "Id");

                                    b2.ToTable("Posts");

                                    b2.WithOwner()
                                        .HasForeignKey("PostMetadataPostId");
                                });

                            b1.Navigation("TopSearches");

                            b1.Navigation("Updates");
                        });

                    b.Navigation("Blog");

                    b.Navigation("Metadata");
                });

            modelBuilder.Entity("BlazorApp1.Models.Blog", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("BlazorApp1.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
